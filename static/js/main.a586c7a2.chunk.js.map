{"version":3,"sources":["components/home/navbar/Navbar.js","components/svg-loader/SvgLoader.js","components/icon-button/IconButton.js","components/home/left-panel/LeftPanel.js","components/menu-icon-button/MenuIconButton.js","services/rest.service.js","models/NewsFeedPost.js","constants/application.constants.js","components/media-gallery/MediaGallery.js","components/home/center-panel/CenterPanel.js","components/home/right-panel/RightPanel.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","Brand","SearchBar","NavigationLinks","UserActions","UserAvatar","links","map","link","key","performance","now","actions","action","src","alt","aria-label","SvgLoader","ref","React","createRef","fetch","this","props","response","text","svgSource","current","appendChild","parseSvgFromSource","DOMParser","parseFromString","firstElementChild","Component","IconButton","style","backgroundColor","color","iconSrc","LeftPanel","QuickLinks","Shortcuts","Explore","colors","labels","actionButtons","button","index","getButton","notificationsCount","shortcuts","Array","fill","shortcut","count","MenuIconButton","json","TimePeriod","NewsFeedPost","news_feed_post_data","userAvatar","userFullName","postedAt","caption","media","likesCount","commentsCount","timeElapsed","Date","captionIsMinimized","substring","length","MediaTypes","ImageFormats","AudioFormats","VideoFormats","MediaGallery","showAtMax","mediaList","mediaObj","MediaObjectTypeResolver","renderMedia","hiddenObjectsCount","hiddenObjectCaption","slice","push","ExpandGallery","getMediaObjectsGrid","mediaObject","data","setMediaType","Object","isImage","type","isAudio","isVideo","source","isComplex","split","reverse","includes","getResourceExtension","primaryKey","getMediaProps","renderedTemplate","captionSrc","backgroundImage","ImageMediaObject","state","loading","imageContainerRef","setState","loadImage","image","cache","blob","URL","createObjectURL","AudioMediaObject","VideoMediaObject","playing","videoElementRef","loadVideo","video","addEventListener","pause","play","loop","preload","data-playing","onClick","toggleVideoPlayback","CenterPanel","CreatePost","actionIcon","getAction","rows","placeholder","Stories","stories","RestService","getStories","Promise","resolve","reject","setTimeout","getHeader","getDummyStoryTemplate","story","cover","NewsFeed","posts","getPostsForNewsFeed","post","post_data","getUserAvatar","getPostedAt","getPostCaption","node","DummyNewsFeedPost","getPostTemplate","RightPanel","YourPages","SuggestedGroups","GroupMemebers","users","offsets","user","offset","left","getUser","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a586c7a2.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.css';\n\nexport default function Navbar(){\n    return (\n        <div className=\"row centerV Navbar\">\n            <Brand />\n            <SearchBar />\n            <div className=\"fillParent\"></div>\n            <NavigationLinks />\n            <div className=\"fillParent\"></div>\n            <UserActions />\n            <UserAvatar />\n        </div>\n    );\n}\n\nfunction Brand(){\n    return (\n        <div className=\"row centerV centerH Brand\"><i className=\"ri-facebook-fill\"></i></div>\n    );\n}\n\nfunction SearchBar(){\n    return (\n        <div className=\"row centerV SearchBar\">\n            <div className=\"label\">Search</div>\n            <i className=\"ri-search-line\"></i>\n        </div>\n    );\n}\n\nfunction NavigationLinks(){\n    let links = [\"home-7\", \"messenger\", \"group\"];\n    links = links.map(link => `ri-${link}-line`);\n    links = links.map(link => <i className={link}></i>);\n    links = links.map(link => <div className=\"link\" key={performance.now()}>{link}</div>)\n\n    return (\n        <div className=\"row NavigationLinks\">{links}</div>\n    );\n}\n\nfunction UserActions(){\n\n    let actions = [\"notification-3\", \"question\", \"settings-5\"];\n    actions = actions.map(action => `ri-${action}-line`);\n    actions = actions.map(action => <i className={action}></i>);\n    actions = actions.map(action => <div className=\"action\" key={performance.now()}>{action}</div>)\n\n    return (\n        <div className=\"row UserActions\">{actions}</div>\n    );\n}\n\nfunction UserAvatar(){\n    return (\n        <div className=\"UserAvatar\">\n            <img src=\"users/user.jpg\" alt=\"user_pic\" aria-label=\"User Profile Pic\" />\n        </div>\n    );\n}\n\n","import React from 'react';\nimport './SvgLoader.css';\n\nexport default class SvgLoader extends React.Component{\n    \n    ref = React.createRef();\n\n    async componentDidMount(){\n        let response = await fetch(this.props.src);\n        let svgSource = await response.text();\n        this.ref.current.appendChild(this.parseSvgFromSource(svgSource));\n    }\n\n    parseSvgFromSource(svgSource){\n        let domParser = new DOMParser();\n        let documentEl = domParser.parseFromString(svgSource, \"image/svg+xml\");\n        return documentEl.firstElementChild;\n    }\n    \n    render(){\n        return (<div className=\"SvgContainer\" ref={this.ref}></div>);\n    }\n}","import React from 'react';\nimport './IconButton.css';\n\nimport SvgLoader from '../svg-loader/SvgLoader';\n\n/**\n * This Component renders an icon button for the given\n * background color and given svg icon source\n * @param color \n * @param iconSrc\n */\nexport default function IconButton(props){\n    return(\n        <div className=\"row centerV centerH IconButton\" style={{backgroundColor: `${props.color}`}}>\n            <SvgLoader src={props.iconSrc} />\n        </div>\n    );\n}","import React from 'react';\nimport './LeftPanel.css';\n\nimport IconButton from '../../icon-button/IconButton';\n\nexport default function LeftPanel(){\n    return(\n        <div className=\"LeftPanel\">\n            <QuickLinks />\n            <Shortcuts />\n            <Explore />\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n/**\n * This component renders Quick Links Card\n * on Left Panel of Homepage\n */\nfunction QuickLinks(){\n    const colors = [\"#0153ff\", \"#febf03\", \"#ff4054\"];\n    const labels = [\"Messenger\", \"News Feed\", \"Watch Live\"];\n    let actionButtons = [\"messenger\", \"news-feed\", \"watch-live-2\"];\n    actionButtons = actionButtons.map(button => `icons/fb-${button}.svg`);\n    actionButtons = actionButtons.map((button, index) => getButton(button, index));\n\n    function getButton(button, index){\n        return (\n            <div className=\"row centerV Link\" key={index}>\n                <IconButton iconSrc={button} color={colors[index]}/>\n                <div className=\"Label\">{labels[index]}</div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"Card QuickLinks\">\n            <div className=\"Header\">Action Buttons</div>\n            <div className=\"UserQuickLink positionRelative row centerV\">\n                <div className=\"UserAvatar\">\n                    <img src=\"users/user2.jpeg\" alt=\"user_image\" aria-label=\"user image\"/>\n                </div>\n                <div className=\"Label\">Sabdin Walid</div>\n            </div>\n            {actionButtons}\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\n/**\n * This component renders Shortcuts Card\n * on Left Panel of Homepage\n */\nfunction Shortcuts(){\n    const iconSrc = \"icons/fb-groups.svg\";\n    const notificationsCount = [10, 0, 10];\n    const labels = [\"UIUX Designers\", \"Hella Narwhal\", \"Keytar McSw\"];\n    const colors = [\"#f3f7ff\", \"#fffcf2\", \"#fff7f7\"];\n    \n    let shortcuts = new Array(3).fill(1);\n    shortcuts = shortcuts.map((shortcut, index) => index);\n    shortcuts = shortcuts.map(shortcut => getButton(shortcut));\n\n    function getButton(index){\n        let count = notificationsCount[index];\n        return (\n            <div className=\"row centerV Link\" key={index}>\n                <IconButton iconSrc={iconSrc} color={colors[index]}/>\n                <div className=\"Label\">{labels[index]}</div>\n                {count !== 0 && <div className=\"NotificationCount\">{count}</div>}\n            </div>\n        );\n    }\n    \n    return (\n        <div className=\"Shortcuts\">\n            <div className=\"Card\">\n                <div className=\"Header\">Shortcuts</div>\n                {shortcuts}\n            </div>\n            <div className=\"SeeMoreBtn\">See more</div>\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\n/**\n * This component renders Explore Links Card\n * on Left Panel of Homepage\n */\nfunction Explore(){\n    const labels = [\"Groups\", \"Events\", \"Pages\"];\n    const colors = [\"#f3f7ff\", \"#fffcf2\", \"#fff7f7\"];\n    let links = [\"groups\", \"calendar\", \"pages\"];\n    links = links.map(link => `icons/fb-${link}.svg`);\n    links = links.map((link, index) => getButton(link, index));\n\n    function getButton(button, index){\n        return (\n            <div className=\"row centerV Link\" key={index}>\n                <IconButton iconSrc={button} color={colors[index]}/>\n                <div className=\"Label\">{labels[index]}</div>\n            </div>\n        );\n    }\n    \n\n    return (\n        <div className=\"Explore\">\n            <div className=\"Card\">\n                <div className=\"Header\">Explore</div>\n                {links}\n            </div>\n            <div className=\"SeeMoreBtn\">See more</div>\n        </div>\n    );\n}","import React from 'react';\nimport './MenuIconButton.css';\n\nimport IconButton from '../icon-button/IconButton';\n\nexport default function MenuIconButton(){\n    return(\n        <div className=\"MenuIconButton\">\n            <IconButton iconSrc=\"icons/menu.svg\" color=\"#c3c4c752\"></IconButton>\n        </div>\n    )\n}\n","class RestService{\n\n    async getStories(){\n        let response = await fetch(\"data/stories.json\");\n        return response.json();\n    }\n\n    async getPostsForNewsFeed(){\n        let response = await fetch(\"data/news-feed.json\");\n        return response.json();\n    }\n\n}\n\nexport default new RestService();","const TimePeriod = {\n    'MIN': 60,\n    'HOUR': 60 * 60,\n    'DAY': 60 * 60 * 24,\n    'WEEK': 60 * 60 * 24 * 7 \n};\n\nexport default class NewsFeedPost{\n    \n    userAvatar;\n    userFullName;\n    postedAt;\n    caption;\n    media;\n    likesCount;\n    commentsCount;\n    \n    constructor(news_feed_post_data){\n        this.userAvatar = news_feed_post_data.userAvatar ? news_feed_post_data.userAvatar: null;\n        this.userFullName = news_feed_post_data.userFullName ? news_feed_post_data.userFullName: null;\n        this.postedAt = news_feed_post_data.postedAt ? news_feed_post_data.postedAt: null;\n        this.caption = news_feed_post_data.caption ? news_feed_post_data.caption: null;\n        this.media = news_feed_post_data.media ? news_feed_post_data.media: null;\n        this.likesCount = news_feed_post_data.likesCount ? news_feed_post_data.likesCount: null;\n        this.commentsCount = news_feed_post_data.commentsCount ? news_feed_post_data.commentsCount: null;\n    }\n\n    getUserAvatar(){\n        return \"users/\" + this.userAvatar;\n    }\n\n    getPostedAt(){\n        let timeElapsed = (Date.now() - this.postedAt) / 1000;\n\n        if(timeElapsed >= TimePeriod.WEEK){\n            return \"Posted few weeks ago\";\n        }\n        \n        else if(timeElapsed >= TimePeriod.DAY){\n            return `Posted few days ago`;\n        }\n\n        else if(timeElapsed >= TimePeriod.HOUR){\n            return `Posted few hours ago`;\n        }\n\n        else if(timeElapsed >= TimePeriod.MIN){\n            return `Posted few mins ago`;\n        }\n\n        else{\n            return `Posted few moments ago`;\n        }\n    }\n\n    getPostCaption(){\n        if(this.captionIsMinimized()){\n            return this.caption.substring(0, 182);\n        }else if(this.caption){\n            return this.caption;\n\n        }\n\n        return \"\";\n    }\n\n    captionIsMinimized(){\n        return (this.caption && this.caption.length > 182);\n    }\n\n    \n}","export const MediaTypes = {\n    IMAGE: \"image\",\n    AUDIO: \"audio\",\n    VIDEO: \"video\"\n}","import React from 'react';\nimport './MediaGallery.css';\n\nimport {MediaTypes} from '../../constants/application.constants';\n\nconst ImageFormats = [\"jpeg\", \"jpg\", \"png\", \"svg\", \"gif\", \"bmp\", \"tiff\"];\nconst AudioFormats = [\"mp3\", \"wav\", \"aiff\", \"au\", \"wma\", \"aa\",\"aac\", \"ape\", \"wv\", \"m4a\", \"oga\"]\nconst VideoFormats = [\"mp4\", \"mkv\", \"3gp\", \"avi\", \"webm\", \"webp\", \"ogg\", \"divx\", \"wmv\", \"flv\", \"mov\"];\n\nexport default class MediaGallery extends React.Component{\n\n    showAtMax = 4;\n\n    getMediaObjectsGrid(){\n\n        let { media } = this.props;\n        let mediaList = media.map(mediaObj => new MediaObjectTypeResolver(mediaObj));\n        mediaList = mediaList.map((mediaObj, index) => mediaObj.renderMedia(index));\n\n        if(mediaList.length > this.showAtMax){\n\n            let hiddenObjectsCount = (mediaList.length - this.showAtMax + 1);\n            let hiddenObjectCaption = media[this.showAtMax];\n            \n            mediaList = mediaList.slice(0, (this.showAtMax - 1));\n            mediaList.push(\n                <ExpandGallery key={this.showAtMax} \n                    hiddenObjectsCount={hiddenObjectsCount} \n                    caption={hiddenObjectCaption}/>\n            );\n\n        }\n\n        return mediaList;\n\n    }\n\n    render(){\n        return (\n            <div className=\"row MediaGallery\">\n                {this.getMediaObjectsGrid()}\n            </div>\n        );\n    }\n}\n\n\n/**\n * This class contains useful methods that identifies media object type i.e. \n * Image, Audio, Video and helps render the corresponding media object component\n */\nclass MediaObjectTypeResolver {\n\n    type;\n    \n    constructor(mediaObject) {\n        this.data = mediaObject;\n        this.setMediaType();\n    }\n\n    isComplex(){\n        return (this.data instanceof Object);\n    }\n\n    setMediaType(){\n        if(this.isImage()){\n            this.type = MediaTypes.IMAGE;\n        }else if(this.isAudio()){\n            this.type = MediaTypes.AUDIO;\n        }else if(this.isVideo()){\n            this.type = MediaTypes.VIDEO;\n        }\n    }\n\n    /**\n     * This method returns given media source and given caption (if provided by users)\n     */\n    getMediaProps(){\n        return {\n            source: (this.isComplex() ? this.data.source: this.data),\n            caption: (this.isComplex() ? this.data.caption: null)\n        };\n    }\n\n    /**\n     * This method returns the extension name for given media object source\n     */\n    getResourceExtension(){\n        let fileName = (this.isComplex() ? this.data.source: this.data);\n        return fileName.split(\".\").reverse()[0];\n    }\n\n    isImage(){\n        return (ImageFormats.includes(this.getResourceExtension()));\n    }\n\n    isAudio(){\n        return (AudioFormats.includes(this.getResourceExtension()));\n    }\n\n    isVideo(){\n        return (VideoFormats.includes(this.getResourceExtension()));\n    }\n\n    /**\n     * This method renders media object component relevant to media type\n     * i.e. Image, Audio or Video\n     */\n    renderMedia(primaryKey){\n        switch(this.type){\n            case MediaTypes.IMAGE:\n                return (<ImageMediaObject key={primaryKey} data={this.getMediaProps()}/>);\n            case MediaTypes.AUDIO:\n                return (<AudioMediaObject key={primaryKey} data={this.getMediaProps()}/>);\n            case MediaTypes.VIDEO:\n                return (<VideoMediaObject key={primaryKey} data={this.getMediaProps()}/>);\n            default:\n                return (<ImageMediaObject key={primaryKey} data={this.getMediaProps()}/>);\n        }\n    }\n\n}\n\n\n\n\n\n\n\n/**\n * This component is used to Maximize gallery and show the count of\n * hidden media objects in gallery and uses given caption source image\n * as background for blurred placeholder\n * @param {hiddenObjectsCount, caption} props \n */\nfunction ExpandGallery(props){\n    let renderedTemplate = (<div className=\"row centerH centerV ExpandGallery\">{\"+ \" + props.hiddenObjectsCount + \" more\"}</div>);\n    \n    // check if caption is available\n    if(props.caption){\n        let captionSrc = (props.caption instanceof Object) ? props.caption.source: props.caption;\n        renderedTemplate = (<div className=\"ExpandGallery\" style={{backgroundImage: `url(${captionSrc})`}}>\n                                <div className=\"Label row centerH centerV\">{\"+ \" + props.hiddenObjectsCount + \" more\"}</div>\n                            </div>);\n    }\n\n    return renderedTemplate;\n}\n\n\n\n\n\n\n\n\n\n/**\n * This component renders Image Type media object in Media Gallery\n * for given source and shows given caption as placeholder while\n * media loads\n * @param {source, caption} props \n */\nclass ImageMediaObject extends React.Component{\n\n    state = {loading: true, data: null};\n    imageContainerRef = React.createRef();\n\n    async componentDidMount(){\n        this.setState({loading: true});\n        let image = await this.loadImage();\n        this.setState({data: image});\n        this.setState({loading: false});\n    }\n\n    async loadImage(){\n       let response = await fetch(this.props.data.source, {cache: \"no-cache\"});\n       let blob = await response.blob();\n       return URL.createObjectURL(blob);\n    }\n\n    render(){\n        let {loading, data} = this.state;\n\n        // if loading is true then show Image Placeholder\n        return (loading ? <div className=\"MediaObject Image Placeholder\"></div> : <div \n            className=\"MediaObject Image\" style={{backgroundImage: `url(${data})`}}></div>);\n    }\n}\n\n/**\n * This component renders Audio Type media object in Media Gallery\n * for given source and shows given caption as placeholder while\n * media loads\n * @param {source, caption} props \n */\nclass AudioMediaObject extends React.Component{\n    render(){\n        return(\n            <div className=\"MediaObject Audio\">Renders Audio</div>\n        )\n    }\n}\n\n/**\n * This component renders Video Type media object in Media Gallery\n * for given source and shows given caption as placeholder while\n * media loads\n * @param {source, caption} props \n */\nclass VideoMediaObject extends React.Component{\n    state = {loading: true, playing: false};\n    videoElementRef = React.createRef();\n\n    async componentDidMount(){\n        this.setState({loading: true});\n        let video = await this.loadVideo();\n        this.setState({loading: false});\n        this.videoElementRef.current.src = video;\n        this.videoElementRef.current.addEventListener('play', () => this.setState({playing: true}));\n        this.videoElementRef.current.addEventListener('pause', () => this.setState({playing: false}));\n    }\n\n    async loadVideo(){\n        let response = await fetch(this.props.data.source);\n        let blob = await response.blob();\n        return URL.createObjectURL(blob);\n    }\n\n    toggleVideoPlayback(){\n        let {playing} = this.state;\n        if(!playing){\n            this.videoElementRef.current.play();\n        }else{\n            this.videoElementRef.current.pause();\n        }\n    }\n\n    render(){\n        let {loading, playing} = this.state;\n\n        // if loading is true then show Image Placeholder\n        return (loading ? <div className=\"MediaObject Video Placeholder\"></div> : <div \n            className=\"row centerH MediaObject Video\">\n                <video loop preload=\"metadata\" ref={this.videoElementRef}></video>\n                <div className=\"positionAbsolute VideoControls\" data-playing={playing} onClick={() => this.toggleVideoPlayback()}>\n                    <i className=\"positionRelative ri-play-circle-fill\"></i>\n                    <i className=\"positionRelative ri-pause-circle-fill\"></i>\n                    <i className=\"positionRelative ri-fullscreen-fill\"></i>\n                </div>\n            </div>);\n    }\n}","import React from 'react';\nimport './CenterPanel.css';\n\nimport IconButton from '../../icon-button/IconButton';\nimport MenuIconButton from '../../menu-icon-button/MenuIconButton';\nimport RestService from '../../../services/rest.service';\nimport NewsFeedPost from '../../../models/NewsFeedPost';\nimport MediaGallery from '../../media-gallery/MediaGallery';\n\nexport default function CenterPanel() {\n    return(\n        <div className=\"CenterPanel\">\n            <CreatePost />\n            <Stories />\n            <NewsFeed />\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * This component renders Crate Post Card on the Center Panel of Homepage\n */\nfunction CreatePost(){\n\n    const labels = [\"Gallery\", \"Tag Friends\", \"Feeling/Activity\"];\n    const colors = [\"#0153ff\", \"#ff4054\", \"#febf03\"];\n    let actions = [\"gallery\", \"tag-friend\", \"smile\"];\n    actions = actions.map(action => `icons/fb-${action}.svg`);\n    actions = actions.map((action, index) => getAction(action, index));\n\n    function getAction(actionIcon, index){\n        return (\n            <div className=\"row centerV Action\" key={index}>\n                <IconButton iconSrc={actionIcon} color={colors[index]} />\n                <div className=\"Label\">{labels[index]}</div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"Card CreatePost\">\n            <div className=\"row centerV\">\n                <IconButton iconSrc=\"icons/fb-new-post.svg\" color=\"#f2f6ff\" />\n                <div className=\"Header\">Create Post</div>\n            </div>\n\n            <div className=\"row WritePost\">\n                <div className=\"UserAvatar\">\n                    <img src=\"users/user.jpg\" alt=\"user.jpeg\" aria-label=\"user profile image\" />\n                </div>\n                <textarea className=\"fillParent\" rows=\"2\" placeholder=\"What's on your mind, Sabdin?\"></textarea>\n            </div>\n\n            <div className=\"row centerV ActionsList\">\n                {actions}\n                <div className=\"fillParent\"></div>\n                <MenuIconButton />\n            </div>\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * This Component Renders stories card on centerl panel of homepage\n */\nclass Stories extends React.Component{\n\n    state = {loading: true, stories: null};\n\n    async componentDidMount(){\n        this.setState({loading: true});\n        let stories = await RestService.getStories();\n        await new Promise((resolve, reject) => setTimeout(() => resolve(), 3000));\n        this.setState({stories: stories});\n        this.setState({loading: false});\n    }\n\n    getHeader(){\n        return (\n            <div className=\"row centerV\">\n                <div className=\"Header\">Stories</div>\n                <div className=\"fillParent\"></div>\n                <div className=\"SeeMoreBtn\">See more</div>\n            </div>\n        );\n    }\n\n    getDummyStoryTemplate(){\n        return (\n            <div className=\"DummyStoryTemplate\" key={performance.now()}>\n                <div className=\"StoryPlaceholder\"></div>\n                <div className=\"row centerV\">\n                    <div className=\"UserAvatarPlaceholder\"></div>\n                    <div className=\"UserFullNamePlaceholder\"></div>\n                </div>\n            </div>\n        );\n    }\n\n    render(){\n        let {loading, stories} = this.state;\n        if(loading || !stories) return (\n            <div className=\"Stories Card\">\n                {this.getHeader()}\n                <div className=\"row StoriesList\">\n                    {new Array(5).fill(1).map(index => this.getDummyStoryTemplate())}\n                </div>\n            </div>\n        );\n\n        return(\n            <div className=\"Stories Card\">\n                {this.getHeader()}\n                <div className=\"row StoriesList\">\n                    {stories.map(story => \n                        <div className=\"Story\" key={performance.now()}>\n                            <div className=\"Cover\" style={{backgroundImage: `url(${story.cover})`}}></div>\n                            <div className=\"row centerV\">\n                                <div className=\"UserAvatar\">\n                                    <img src={story.userAvatar} alt={story.userAvatar} aria-label=\"posted by user image\"/>\n                                </div>\n                                <div className=\"UserFullName\">{story.userFullName}</div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * This component renders News Feed on Center Panel of Homepage\n */\n\nclass NewsFeed extends React.Component{\n\n    state = {loading: true, posts: null};\n\n    async componentDidMount(){\n        this.setState({loading: true});\n        let posts = await RestService.getPostsForNewsFeed();\n        posts = posts.map(post => new NewsFeedPost(post));\n        await new Promise((resolve, reject) => setTimeout(() => resolve(), 3000));\n        this.setState({posts: posts});\n        this.setState({loading: false});\n    }\n\n    getPostTemplate(post_data){\n        return (\n            <div className=\"NewsFeedPost Card\" key={performance.now()}>\n                \n                {/* Post Header */}\n                <div className=\"row centerV\">\n                    <div className=\"UserAvatar\" style={{backgroundImage: `url(${post_data.getUserAvatar()})`}}></div>\n                    <div>\n                        <div className=\"UserFullName\">{post_data.userFullName}</div>\n                        <div className=\"row centerV\">\n                            <div className=\"PostedAt\">{post_data.getPostedAt()}</div>\n                            <i className=\"ri-alarm-line\"></i>\n                        </div>\n                    </div>\n                    <div className=\"fillParent\"></div>\n                    <MenuIconButton />\n                </div>\n\n                {/* Post Caption */}\n                <div className=\"PostCaption\">{post_data.getPostCaption()} \n                    {post_data.captionIsMinimized() ? <span className=\"seeMoreBtn\">See More</span> : \"\"}\n                </div>\n\n                {/* Media Gallery */}\n                <MediaGallery media={post_data.media}/>\n\n                {/* Post Actions i.e. Like/Comment/Share */}\n                <div className=\"row centerV Actions\">\n                    \n                    <div className=\"Action\"><i className=\"ri-thumb-up-fill\"></i></div>\n                    <div className=\"Action\"><i className=\"ri-heart-2-fill\"></i></div>\n\n                    <div className=\"Label\">{post_data.likesCount}</div>\n                    <div className=\"Label\">{post_data.commentsCount + \" comments\"}</div>\n\n                    <div className=\"fillParent\"></div>\n\n                    <i className=\"ri-share-forward-line\"></i>\n                    <i className=\"Label\">Share</i>\n\n                </div>\n\n            </div>\n        );\n    }\n\n    render(){\n        let {loading, posts} = this.state;\n\n        return (\n            <div className=\"NewsFeed\">\n                {loading && <div>{new Array(5).fill(1).map((node, index) => index).map(index => <DummyNewsFeedPost key={index} />)}</div>}\n                {(!loading && posts && (posts instanceof Array)) && posts.map(post => this.getPostTemplate(post))}\n            </div>\n        );\n    }\n}\n\nfunction DummyNewsFeedPost(){\n    return(\n        <div className=\"DummyNewsFeedPost Card\">\n            <div className=\"row centerV\">\n                <div className=\"UserAvatarPlaceholder\"></div>\n                <div>\n                    <div className=\"UserNamePlaceholder\"></div>\n                    <div className=\"PostedAtPlaceholder\"></div>\n                </div>\n                <div className=\"fillParent\"></div>\n                <div className=\"MenuIconBtnPlaceholder\"></div>\n            </div>\n            <div className=\"PostCaptionPlaceholder\"></div>\n        </div>\n    )\n}","import React from 'react';\nimport './RightPanel.css';\n\nimport IconButton from '../../icon-button/IconButton';\nimport MenuIconButton from '../../menu-icon-button/MenuIconButton';\n\nexport default function RightPanel(){\n    return(\n        <div className=\"RightPanel\">\n            <YourPages />\n            <SuggestedGroups />\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n/**\n * This component renders Your Pages card on right panel of Home page\n */\nfunction YourPages(){\n    return (\n        <div className=\"row centerV Card\">\n            <div className=\"YourPages row centerV\">\n                <IconButton iconSrc=\"icons/fb-pages.svg\" color=\"#0153ff\"></IconButton>\n                <div className=\"Label\">Your Pages(1)</div>\n            </div>\n            <div className=\"fillParent\"></div>\n            <MenuIconButton />\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * This component renders suggested groups card on\n * right panel of home page\n */\nfunction SuggestedGroups(){\n    return (\n        <div className=\"Card SuggestedGroups\">\n            <div className=\"row centerV\">\n                <div className=\"Header\">Suggested groups</div>\n                <div className=\"fillParent\"></div>\n                <div className=\"SeeMoreBtn\">See more</div>\n            </div>\n            <div className=\"Cover\">\n                <img src=\"covers/suggested_grp.jpeg\" alt=\"suggested_grp_cover\" aria-label=\"suggested groups cover pic\" />\n            </div>\n            <div className=\"row centerV\">\n                <div className=\"GroupDetails\">\n                    <div className=\"GroupName\">Anthony Douglas</div>\n                    <div className=\"GroupDescription\">65 friends | 1.5k members</div>\n                </div>\n                <div className=\"fillParent\"></div>\n                <GroupMemebers />\n            </div>\n        </div>\n    );\n}\n\n/**\n * This Component rencders group members list in Suggested Groups\n * component on right side panel of homepage\n */\nfunction GroupMemebers(){\n\n    let users = new Array(3).fill(1);\n    const offsets = [-6.7, -5, -3.5];\n    users = users.map((user, index) => (index + 3));\n    users = users.map(user => `users/user${user}.jpeg`);\n    users = users.map((user, index) => getUser(user, offsets[index]));\n\n    function getUser(user, offset){\n        return (\n            <div className=\"positionAbsolute User\" key={performance.now()}\n                style={{left: `${offset}vw`}}>\n                <img src={user} alt={user}/>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"GroupMembers positionRelative\">\n            {users}\n            <div className=\"positionAbsolute Count\">+20</div>\n        </div>\n    );\n}","import React from 'react';\n\nimport './App.css';\nimport './fonts.css';\nimport './animations.css';\nimport 'remixicon/fonts/remixicon.css';\n\nimport Navbar from './components/home/navbar/Navbar';\nimport LeftPanel from './components/home/left-panel/LeftPanel';\nimport CenterPanel from './components/home/center-panel/CenterPanel';\nimport RightPanel from './components/home/right-panel/RightPanel';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Navbar></Navbar>\n\t\t\t<div className=\"row\">\n\t\t\t\t<LeftPanel />\n\t\t\t\t<div className=\"fillParent\">\n\t\t\t\t\t<CenterPanel />\n\t\t\t\t</div>\n\t\t\t\t<RightPanel />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}